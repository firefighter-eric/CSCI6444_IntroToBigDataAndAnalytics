print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
unlink('notebook_cache', recursive = TRUE)
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp = shortest.paths(G, v, v)
sp[is.infinite(sp)] = -1
longest_path = max(sp)
print(longest_path)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp = shortest.paths(G, v, v)
sp[is.infinite(sp)] = -1
longest_path = max(sp)
print(longest_path)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
View(my_ego)
tinytex::install_tinytex()
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp = shortest.paths(G, v, v)
sp[is.infinite(sp)] = -1
longest_path = max(sp)
print(longest_path)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
get_diameter(g)
get_diameter(G)
diameter(G)
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp = shortest.paths(G, v, v)
sp[is.infinite(sp)] = -1
longest_path = max(sp)
print(longest_path)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
plot.igraph(G)
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp)] = -1
longest_path = max(sp)
print(longest_path)
sp2_len = diameter(G)
sp2 = get_diameter(G)
print(sp2_len)
print(sp2)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
source('~/Documents/RProject/project 1/#4.R')
View(my_edge_list)
len(v)
length(v)
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp)] = -1
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp1)] = -1
longest_path = max(sp)
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp1)] = -1
longest_path = max(sp1)
print(longest_path)
sp2_len = diameter(G)
sp2 = get_diameter(G)
print(sp2_len)
print(sp2)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
maxegolength = 0
egores = 0
count = 0
for(i in 1:5242){
if (maxegolength < length(my_ego[[i]])){
maxegolength = length(my_ego[[i]])
egores = i
}
}
#check how many longest arrays in the list
#for(i in 1:5242){
#  if ( length(my_ego[[i]]) == 82) count = count + 1
#}
#print(count)
#count = 1
print(maxlength)
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp1)] = -1
longest_path = max(sp1)
print(longest_path)
sp2_len = diameter(G)
sp2 = get_diameter(G)
print(sp2_len)
print(sp2)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
maxegolength = 0
egores = 0
count = 0
for(i in 1:5242){
if (maxegolength < length(my_ego[[i]])){
maxegolength = length(my_ego[[i]])
egores = i
}
}
#check how many longest arrays in the list
#for(i in 1:5242){
#  if ( length(my_ego[[i]]) == 82) count = count + 1
#}
#print(count)
#count = 1
print(maxegolength)
my_ego[[egores]]
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp1)] = -1
longest_path = max(sp1)
print(longest_path)
sp2_len = diameter(G)
sp2 = get_diameter(G)
print(sp2_len)
print(sp2)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
maxegolength = 0
egores = 0
count = 0
for(i in 1:5242){
if (maxegolength < length(my_ego[[i]])){
maxegolength = length(my_ego[[i]])
egores = i
}
}
#check how many longest arrays in the list
#for(i in 1:5242){
#  if ( length(my_ego[[i]]) == 82) count = count + 1
#}
#print(count)
#count = 1
print(maxegolength)
my_ego[[egores]]
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp1)] = -1
longest_path = max(sp1)
print(longest_path)
sp2_len = diameter(G)
sp2 = get_diameter(G)
print(sp2_len)
print(sp2)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
maxegolength = 0
egores = 0
count = 0
for(i in 1:5242){
if (maxegolength < length(my_ego[[i]])){
maxegolength = length(my_ego[[i]])
egores = i
}
}
#check how many longest arrays in the list
#for(i in 1:5242){
#  if ( length(my_ego[[i]]) == 82) count = count + 1
#}
#print(count)
#count = 1
print(maxegolength)
my_ego[[egores]]
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
library(igraph)
CA.GrQc <- read.delim("CA-GrQc.txt", header=FALSE, comment.char="#")
G = graph_from_data_frame(CA.GrQc, directed = FALSE)
G = simplify(G)
v = V(G)
e = E(G)
cd = centr_degree(G)
max_index = which.max(cd[["res"]])
c = v[max_index]
print(c)
sp1 = shortest.paths(G, v, v)
sp1[is.infinite(sp1)] = -1
longest_path = max(sp1)
print(longest_path)
sp2_len = diameter(G)
sp2 = get_diameter(G)
print(sp2_len)
print(sp2)
lcq = largest_cliques(G)
print(lcq)
my_ego = ego(
G,
order = 1,
nodes = V(G),
mode = c("all", "out", "in"),
mindist = 0
)
maxegolength = 0
egores = 0
count = 0
for(i in 1:5242){
if (maxegolength < length(my_ego[[i]])){
maxegolength = length(my_ego[[i]])
egores = i
}
}
#check how many longest arrays in the list
#for(i in 1:5242){
#  if ( length(my_ego[[i]]) == 82) count = count + 1
#}
#print(count)
#count = 1
print(maxegolength)
my_ego[[egores]]
pc = power_centrality(
G,
nodes = V(G),
loops = FALSE,
exponent = 0.9,
rescale = FALSE,
tol = 1e-07,
sparse = TRUE
)
max_pc = max(pc)
index_max_pc = which.max(pc)
print(max_pc)
print(v[index_max_pc])
